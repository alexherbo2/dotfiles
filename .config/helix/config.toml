# Helix
# https://helix-editor.com
# https://docs.helix-editor.com/keymap.html
# https://docs.helix-editor.com/commands.html
# https://docs.helix-editor.com/configuration.html
# https://github.com/helix-editor/helix/blob/master/helix-term/src/keymap/default.rs
# https://github.com/helix-editor/helix/blob/master/helix-term/src/commands.rs
# https://github.com/helix-editor/helix/blob/master/helix-term/src/commands/typed.rs
# https://github.com/helix-editor/helix/blob/master/helix-view/src/editor.rs
#
# Custom patches:
# https://github.com/helix-editor/helix/pull/2608
# https://github.com/helix-editor/helix/pull/3328
# https://github.com/helix-editor/helix/pull/3791
# https://github.com/helix-editor/helix/pull/5340
# https://github.com/helix-editor/helix/pull/5468
# https://github.com/helix-editor/helix/pull/5768

# Appearance -------------------------------------------------------------------

theme = 'onelight'
editor.color-modes = true
editor.auto-format = false
editor.idle-timeout = 100
editor.cursor-shape.insert = 'bar'
editor.cursor-shape.normal = 'block'
editor.cursor-shape.select = 'underline'
editor.whitespace.characters = { newline = '¬' }
editor.soft-wrap.enable = true
editor.file-picker.hidden = false

# Key bindings -----------------------------------------------------------------

# Kakoune keyboard shortcuts
# https://kakoune.org

# VS Code keyboard shortcuts
# https://code.visualstudio.com/docs/getstarted/keybindings#_default-keyboard-shortcuts

# Normal mode ------------------------------------------------------------------

# Reference:
# https://github.com/mawww/kakoune/blob/master/src/normal.cc

[keys.normal]
# Enter command mode
ret = 'command_mode'

# Moving around
H = 'extend_char_left'
J = 'extend_line_down'
K = 'extend_line_up'
L = 'extend_char_right'

# Left-right motions
f = ['ensure_selections_forward', 'extend_next_char']
t = ['ensure_selections_forward', 'extend_till_char']
F = ['ensure_selections_forward', 'flip_selections', 'extend_prev_char']
T = ['ensure_selections_forward', 'flip_selections', 'extend_till_prev_char']

# Word motions
W = 'extend_next_word_start'
E = 'extend_next_word_end'
B = 'extend_prev_word_start'

A-w = 'move_next_long_word_start'
A-e = 'move_next_long_word_end'
A-b = 'move_prev_long_word_start'

A-W = 'extend_next_long_word_start'
A-E = 'extend_next_long_word_end'
A-B = 'extend_prev_long_word_start'

# Line motions
A-h = ['ensure_selections_forward', 'flip_selections', 'extend_to_line_start']
A-l = ['ensure_selections_forward', 'extend_to_line_end']

X = ['extend_to_line_bounds', 'ensure_selections_forward', 'flip_selections']

# Paragraph motions
'{' = ['ensure_selections_forward', 'flip_selections', 'select_mode', 'goto_prev_paragraph', 'exit_select_mode']
'}' = ['ensure_selections_forward', 'select_mode', 'goto_next_paragraph', 'exit_select_mode']

# Various motions
G.e = ['select_mode', 'ensure_selections_forward', 'goto_file_end', 'exit_select_mode']
m.x = ['extend_to_line_bounds', 'trim_selections']
M = ['select_mode', 'match_brackets', 'exit_select_mode']

# Join and keep matching selections
A-j = 'join_selections'
A-k = 'keep_selections'

# Vim-like unimpaired mappings
'['.w = ':set whitespace.render none'
']'.w = ':set whitespace.render all'
'['.tab = ':set indent-guides.render false'
']'.tab = ':set indent-guides.render true'
'['.r = ':set rulers []'
']'.r = ':set rulers [81]'
'['.'[' = ':set-language text'
']'.']'.b = ':set-language bash'
']'.']'.c = ':set-language crystal'
']'.']'.j = ':set-language javascript'
']'.']'.J = ':set-language json'
']'.']'.m = ':set-language markdown'
']'.']'.r = ':set-language rust'
']'.']'.t = ':set-language toml'
']'.']'.y = ':set-language yaml'

[keys.normal.space]
# Yank selected text to local clipboard.
Y = ':pipe-to tmux load-buffer -w -'

# Format date as “1991-11-02 Sat”.
D = ':pipe date -d "$(cat)" "+%F %a" | tr -d "\\n"'

# Sanitize text input.
'@' = ':pipe iconv -f UTF-8 -t ASCII//TRANSLIT//IGNORE'

# Insert mode ------------------------------------------------------------------

# Reference:
# https://github.com/mawww/kakoune/blob/master/src/input_handler.cc

[keys.insert.C-space]
# Insert date-time as “1991-11-02 Sat 10:52”.
d = ['collapse_selection', ':insert-output date "+%F %a %H:%M" | tr -d "\\n"', 'move_char_right']

[keys.insert.C-k]
# Insert various characters.
# Heavily based on qwerty-lafayette.
# https://qwerty-lafayette.org
# See also “Vim digraphs” for defaults.
# https://vimhelp.org/digraph.txt.html#digraphs-default
q = ['collapse_selection', ':insert-output printf â', 'move_char_right']
w = ['collapse_selection', ':insert-output printf é', 'move_char_right']
W = ['collapse_selection', ':insert-output printf É', 'move_char_right']
e = ['collapse_selection', ':insert-output printf è', 'move_char_right']
E = ['collapse_selection', ':insert-output printf ë', 'move_char_right']
r = ['collapse_selection', ':insert-output printf ê', 'move_char_right']
u = ['collapse_selection', ':insert-output printf ù', 'move_char_right']
U = ['collapse_selection', ':insert-output printf û', 'move_char_right']
i = ['collapse_selection', ':insert-output printf î', 'move_char_right']
I = ['collapse_selection', ':insert-output printf ï', 'move_char_right']
o = ['collapse_selection', ':insert-output printf ô', 'move_char_right']
'[' = ['collapse_selection', ':insert-output printf ê', 'move_char_right']
']' = ['collapse_selection', ':insert-output printf ë', 'move_char_right']
'{' = ['collapse_selection', ':insert-output printf «', 'move_char_right']
'}' = ['collapse_selection', ':insert-output printf »', 'move_char_right']
a = ['collapse_selection', ':insert-output printf à', 'move_char_right']
A = ['collapse_selection', ':insert-output printf À', 'move_char_right']
s = ['collapse_selection', ':insert-output printf â', 'move_char_right']
c = ['collapse_selection', ':insert-output printf ç', 'move_char_right']
C = ['collapse_selection', ':insert-output printf Ç', 'move_char_right']
z = ['collapse_selection', ':insert-output printf æ', 'move_char_right']
x = ['collapse_selection', ':insert-output printf œ', 'move_char_right']
'.' = ['collapse_selection', ':insert-output printf …', 'move_char_right']
space = ['collapse_selection', ':insert-output printf ’', 'move_char_right']
'<' = ['collapse_selection', ':insert-output printf “', 'move_char_right']
'>' = ['collapse_selection', ':insert-output printf ”', 'move_char_right']
minus = ['collapse_selection', ':insert-output printf —', 'move_char_right']
_ = ['collapse_selection', ':insert-output printf –', 'move_char_right']
