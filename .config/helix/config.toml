# Helix
# https://helix-editor.com
# https://docs.helix-editor.com/keymap.html
# https://docs.helix-editor.com/commands.html
# https://docs.helix-editor.com/configuration.html
# https://github.com/helix-editor/helix/blob/master/helix-term/src/keymap/default.rs
# https://github.com/helix-editor/helix/blob/master/helix-term/src/commands.rs
# https://github.com/helix-editor/helix/blob/master/helix-term/src/commands/typed.rs
# https://github.com/helix-editor/helix/blob/master/helix-view/src/editor.rs
#
# Custom patches:
# https://github.com/helix-editor/helix/pull/3328
# https://github.com/helix-editor/helix/pull/5468
# https://github.com/helix-editor/helix/pull/5768

# Appearance -------------------------------------------------------------------

theme = 'emacs'
editor.color-modes = true
editor.auto-format = false
editor.idle-timeout = 100
editor.cursor-shape.insert = 'bar'
editor.cursor-shape.normal = 'block'
editor.cursor-shape.select = 'underline'
editor.whitespace.characters = { newline = '¬' }
editor.soft-wrap.enable = true
editor.file-picker.hidden = false

# Key bindings -----------------------------------------------------------------

# Kakoune keyboard shortcuts
# https://kakoune.org

# VS Code keyboard shortcuts
# https://code.visualstudio.com/docs/getstarted/keybindings#_default-keyboard-shortcuts

# Normal mode ------------------------------------------------------------------

# Reference:
# https://github.com/mawww/kakoune/blob/master/src/normal.cc

[keys.normal.':']
d = 'delete_selection'
c = 'change_selection'
'*' = 'search_selection'

[keys.select]
esc = ['exit_select_mode', 'collapse_selection']
v = ['normal_mode', 'collapse_selection']
w = ['ensure_selections_forward', 'extend_next_sub_word_start']
e = ['ensure_selections_forward', 'extend_next_sub_word_end']
b = ['ensure_selections_forward', 'flip_selections', 'extend_prev_sub_word_start']
W = ['ensure_selections_forward', 'extend_next_long_word_start']
E = ['ensure_selections_forward', 'extend_next_long_word_end']
B = ['ensure_selections_forward', 'flip_selections', 'extend_prev_long_word_start']
i = 'select_textobject_inner'
a = 'select_textobject_around'

C-down = ['ensure_selections_forward', 'extend_to_line_bounds', 'extend_char_right', 'extend_char_left', 'delete_selection', 'paste_after']
C-up = ['ensure_selections_forward', 'extend_to_line_bounds', 'extend_char_right', 'extend_char_left', 'delete_selection', 'move_line_up', 'paste_before']

[keys.normal]
# Enter command mode
ret = 'command_mode'

'*' = '@miw:*<A-;>;<esc>'

pagedown = ['keep_primary_selection', 'collapse_selection', 'page_down']
pageup = ['keep_primary_selection', 'collapse_selection', 'page_up']
C-d = ['keep_primary_selection', 'collapse_selection', 'page_cursor_half_down']
C-u = ['keep_primary_selection', 'collapse_selection', 'page_cursor_half_up']

C-a = 'goto_last_accessed_file'
C-s = ':write'

D = ['collapse_selection', 'extend_to_line_end', 'delete_selection']
C = ['collapse_selection', 'extend_to_line_end', 'change_selection']

# Moving around
H = 'extend_char_left'
J = 'extend_line_down'
K = 'extend_line_up'
L = 'extend_char_right'

# Left-right motions
# f = ['ensure_selections_forward', 'extend_next_char']
f = 'goto_word'
F = 'extend_to_word'
t = ['ensure_selections_forward', 'extend_till_char']
# F = ['ensure_selections_forward', 'flip_selections', 'extend_prev_char']
T = ['ensure_selections_forward', 'flip_selections', 'extend_till_prev_char']

# Word motions
w = ['collapse_selection', 'move_next_sub_word_start', 'collapse_selection']
e = ['collapse_selection', 'move_next_sub_word_end', 'collapse_selection']
b = ['collapse_selection', 'move_prev_sub_word_start', 'collapse_selection']

W = ['collapse_selection', 'move_next_long_word_start', 'collapse_selection']
E = ['collapse_selection', 'move_next_long_word_end', 'collapse_selection']
B = ['collapse_selection', 'move_prev_long_word_start', 'collapse_selection']

# Line motions
A-h = ['ensure_selections_forward', 'flip_selections', 'extend_to_line_start']
A-l = ['ensure_selections_forward', 'extend_to_line_end']

X = ['extend_to_line_bounds', 'ensure_selections_forward', 'flip_selections']

# Paragraph motions
'{' = ['ensure_selections_forward', 'flip_selections', 'select_mode', 'goto_prev_paragraph', 'exit_select_mode']
'}' = ['ensure_selections_forward', 'select_mode', 'goto_next_paragraph', 'exit_select_mode']

# Various motions
G.e = ['select_mode', 'ensure_selections_forward', 'goto_file_end', 'exit_select_mode']
m.x = ['extend_to_line_bounds', 'trim_selections']
M = ['select_mode', 'match_brackets', 'exit_select_mode']

minus = ['ensure_selections_forward', 'extend_char_right', 'extend_char_left']

d.i.w = '@;miw:d'
d.i.p = '@;mip:d'
d.i.'(' = '@;mi(:d'
d.i.'{' = '@;mi{:d'
d.i.'[' = '@;mi[:d'

d.a.w = '@;maw:d'
d.a.p = '@;map:d'
d.a.'(' = '@;ma(:d'
d.a.'{' = '@;ma{:d'
d.a.'[' = '@;ma[:d'

c.i.w = '@;miw:c'
c.i.p = '@;mip:c'
c.i.'(' = '@;mi(:c'
c.i.'{' = '@;mi{:c'
c.i.'[' = '@;mi[:c'

c.a.w = '@;maw:c'
c.a.p = '@;map:c'
c.a.'(' = '@;ma(:c'
c.a.'{' = '@;ma{:c'
c.a.'[' = '@;ma[:c'

x = '@;:d'

# Join and keep matching selections
A-j = 'join_selections'
A-k = 'keep_selections'

# Vim-like unimpaired mappings
'['.w = ':set whitespace.render none'
']'.w = ':set whitespace.render all'
'['.tab = ':set indent-guides.render false'
']'.tab = ':set indent-guides.render true'
'['.r = ':set rulers []'
']'.r = ':set rulers [81]'
'['.'[' = ':set-language text'
']'.']'.b = ':set-language bash'
']'.']'.c = ':set-language crystal'
']'.']'.j = ':set-language javascript'
']'.']'.J = ':set-language json'
']'.']'.m = ':set-language markdown'
']'.']'.r = ':set-language rust'
']'.']'.t = ':set-language toml'
']'.']'.y = ':set-language yaml'

'@' = 'replay_macro'

C-down = ['ensure_selections_forward', 'extend_to_line_bounds', 'extend_char_right', 'extend_char_left', 'delete_selection', 'paste_after']
C-up = ['ensure_selections_forward', 'extend_to_line_bounds', 'extend_char_right', 'extend_char_left', 'delete_selection', 'move_line_up', 'paste_before']

'#' = 'toggle_comments'

[keys.normal.space]
q = ':buffer-close'
space = ['keep_primary_selection', 'collapse_selection']
tab = 'flip_selections'
backspace = 'collapse_selection'
# Format date as “1991-11-02 Sat”.
D = ':pipe date -d "$(cat)" "+%F %a" | tr -d "\\n"'
o = 'add_newline_below'
O = 'add_newline_above'
# '@' = 'record_macro'
# Sanitize text input.
'@' = ':pipe iconv -f UTF-8 -t ASCII//TRANSLIT//IGNORE'

[keys.normal.space.w]
o = 'hsplit'
O = 'vsplit'
c = 'wclose'
C = 'wonly'

# Insert mode ------------------------------------------------------------------

# Reference:
# https://github.com/mawww/kakoune/blob/master/src/input_handler.cc

[keys.insert.C-space]
# Insert date-time as “1991-11-02 Sat 10:52”.
d = ['collapse_selection', ':insert-output date "+%F %a %H:%M" | tr -d "\\n"', 'move_char_right']

[keys.insert.C-k]
# Insert various characters.
# Heavily based on qwerty-lafayette.
# https://qwerty-lafayette.org
# See also “Vim digraphs” for defaults.
# https://vimhelp.org/digraph.txt.html#digraphs-default
q = ['collapse_selection', ':insert-output printf â', 'move_char_right']
w = ['collapse_selection', ':insert-output printf é', 'move_char_right']
W = ['collapse_selection', ':insert-output printf É', 'move_char_right']
e = ['collapse_selection', ':insert-output printf è', 'move_char_right']
E = ['collapse_selection', ':insert-output printf ë', 'move_char_right']
r = ['collapse_selection', ':insert-output printf ê', 'move_char_right']
u = ['collapse_selection', ':insert-output printf ù', 'move_char_right']
U = ['collapse_selection', ':insert-output printf û', 'move_char_right']
i = ['collapse_selection', ':insert-output printf î', 'move_char_right']
I = ['collapse_selection', ':insert-output printf ï', 'move_char_right']
o = ['collapse_selection', ':insert-output printf ô', 'move_char_right']
'[' = ['collapse_selection', ':insert-output printf ê', 'move_char_right']
']' = ['collapse_selection', ':insert-output printf ë', 'move_char_right']
'{' = ['collapse_selection', ':insert-output printf «', 'move_char_right']
'}' = ['collapse_selection', ':insert-output printf »', 'move_char_right']
a = ['collapse_selection', ':insert-output printf à', 'move_char_right']
A = ['collapse_selection', ':insert-output printf À', 'move_char_right']
s = ['collapse_selection', ':insert-output printf â', 'move_char_right']
c = ['collapse_selection', ':insert-output printf ç', 'move_char_right']
C = ['collapse_selection', ':insert-output printf Ç', 'move_char_right']
z = ['collapse_selection', ':insert-output printf æ', 'move_char_right']
x = ['collapse_selection', ':insert-output printf œ', 'move_char_right']
'.' = ['collapse_selection', ':insert-output printf …', 'move_char_right']
space = ['collapse_selection', ':insert-output printf ’', 'move_char_right']
'<' = ['collapse_selection', ':insert-output printf “', 'move_char_right']
'>' = ['collapse_selection', ':insert-output printf ”', 'move_char_right']
minus = ['collapse_selection', ':insert-output printf —', 'move_char_right']
_ = ['collapse_selection', ':insert-output printf –', 'move_char_right']
