# Kakoune
# https://kakoune.org
# https://github.com/mawww/kakoune
#
# Configuration:
#
# https://github.com/Delapouite/dot-in-the-sky/blob/master/.config/kak/kakrc
# https://github.com/mawww/config/blob/master/kakrc
# https://github.com/occivink/config/blob/master/.config/kak/kakrc
# https://github.com/topisani/dotfiles/blob/master/config/kak/kakrc
# https://gitlab.com/vbauerster/dotfiles/-/blob/master/.config/kak/kakrc

# VS Code keyboard shortcuts
# https://code.visualstudio.com/docs/getstarted/keybindings#_default-keyboard-shortcuts

colorscheme macos_light

# Preamble ---------------------------------------------------------------------

evaluate-commands %sh{
  kak-lsp --kakoune --session "$kak_session"
}
lsp-enable

# Options ----------------------------------------------------------------------

# UI options
set-option global startup_info_version 20231231
set-option global ui_options terminal_set_title=no terminal_assistant=none
set-option global matching_pairs ( ) { } [ ] < > “ ” ‘ ’ « » ‹ ›
set-option global scrolloff 5,1
#set-option global autoinfo ''
add-highlighter global/match_brackets show-matching
add-highlighter global/line_numbers number-lines -hlcursor

set-option global terminal_command alacritty
set-option global terminal_args msg create-window -e
# set-option global terminal_command footclient
# set-option global terminal_args
set-option global grep_command rg
set-option global grep_args --vimgrep --hidden
set-option global find_command fd
set-option global find_args --hidden --type=file

# Status line
set-option global modelinefmt '%val{bufname} %val{cursor_line}:%val{cursor_char_column} {{context_info}} %opt{indentwidth} %opt{filetype} {{mode_info}} - %val{client}@%val{session}'

# Highlight various characters
add-highlighter global/characters regex '[–—−×]' '0:cyan+f'

# Mappings ---------------------------------------------------------------------

# Normal mode ------------------------------------------------------------------

# User mode --------------------------------------------------------------------

map global normal <c-j> ':copy_selected_lines_down<ret>'
map global normal <c-k> ':copy_selected_lines_up<ret>'

# Enter command mode
map -docstring 'enter command mode' global normal <ret> :

map -docstring 'convert selected dates to ISO 8601' global user d ':convert_selected_dates_to_iso_8601<ret>'
map -docstring 'convert selected text to ASCII' global user @ ':convert_selected_text_to_ascii<ret>'
map -docstring 'get character info' global user u ':get_character_info<ret>'

# Add search flags
map global prompt <a-i> '<home>(?i)<end>'
map global prompt <a-o> '<home>(?S)<end>'

map -docstring 'enter_letter_case_mode' global normal '`' ':enter_letter_case_mode<ret>'
map -docstring 'enter_window_mode' global normal <c-w> ':enter_window_mode<ret>'
map -docstring 'enter_window_mode' global user w ':enter_window_mode<ret>'
map -docstring 'enter extend mode' global normal V ':enter_extend_mode<ret>'
map -docstring 'enter match mode' global normal m ':enter_match_mode<ret>'
map -docstring 'enter mark mode' global normal "'" ':enter_mark_mode<ret>'
map -docstring 'enter select mode' global normal S ':enter_select_mode<ret>'
map -docstring 'enter surround mode' global normal q ':enter_surround_mode<ret>'
map -docstring 'select previous surrounding object' global normal [ ':enter_select_previous_object_mode<ret>'
map -docstring 'select next surrounding object' global normal ] ':enter_select_next_object_mode<ret>'
map -docstring 'open file picker' global user f ':open_file_picker<ret>'
map -docstring 'open buffer picker' global user b ':open_buffer_picker<ret>'
map -docstring 'open global search prompt' global user / ':open_global_search_prompt<ret>'
map -docstring 'open buffer search prompt' global user ? ':open_buffer_search_prompt<ret>'
map -docstring 'open file finder' global user . ':open_file_finder<ret>'
map -docstring 'open buffer finder' global user , ':open_buffer_finder<ret>'
map -docstring 'open document symbol picker' global user s ':open_document_symbol_picker<ret>'
map -docstring 'open workspace symbol picker' global user S ':open_workspace_symbol_picker<ret>'
map -docstring 'show definition preview hover' global user k ':show_definition_preview_hover<ret>'
map -docstring 'enter lsp mode' global user l ':enter_lsp_mode<ret>'
map -docstring 'yank selected text to the terminal clipboard' global user y ':yank_selected_text_to_terminal_clipboard<ret>'

# Key remapping
map global normal <a-q> q
map global normal <a-Q> Q
map global normal d <a-d>
map global normal c <a-c>

map -docstring 'unimpaired_left' global user '[' ':enter_unimpaired_left_mode<ret>'
map -docstring 'unimpaired_right' global user ']' ':enter_unimpaired_right_mode<ret>'

map -docstring 'enter digraphs mode' global insert <c-k> '<a-;>:enter_digraphs_mode<ret>'

hook global InsertCompletionShow .* %{
  map window insert <c-n> <c-n>
  map window insert <c-p> <c-p>
  map window insert <tab> <c-n>
  map window insert <s-tab> <c-p>
  hook -once window InsertCompletionHide .* %{
    unmap window insert <c-n>
    unmap window insert <c-p>
    unmap window insert <tab>
    unmap window insert <s-tab>
  }
}
map -docstring 'add selections to register' global normal Y '<a-Z>a'
map -docstring 'iterate next selection' global insert <c-n> '<esc>:iterate_next_selection<ret>i'
map -docstring 'iterate previous selection' global insert <c-p> '<esc>:iterate_previous_selection<ret>i'

map -docstring 'move selected lines down' global normal <c-j> ':move_selected_lines_down<ret>'
map -docstring 'move selected lines up' global normal <c-k> ':move_selected_lines_up<ret>'
map -docstring 'select all occurrences of current selection' global normal <a-%> ':select_highlights<ret>'
map -docstring 'increment selected numbers' global normal <c-a> ':increment_selected_numbers %val{count}<ret>'
map -docstring 'decrement selected numbers' global normal <c-x> ':decrement_selected_numbers %val{count}<ret>'
map -docstring 'buffer directory' global prompt <a-/> '%sh{dirname "$kak_bufname"}<a-!>/'

map -docstring 'iterate next selection' global normal <c-n> ':iterate_next_selection<ret>'
map -docstring 'iterate previous selection' global normal <c-p> ':iterate_previous_selection<ret>'
map -docstring 'toggle comments' global normal '#' ':toggle_comments_with_config<ret>'
map -docstring 'erase characters before cursor to line begin' global insert <c-u> '<a-;>:erase_characters_before_cursor_to_line_begin<ret>'
map -docstring 'paste' global insert <c-y> '<c-r>"'
map -docstring 'Increase indent' global insert <tab> '<a-;>:increase_indent<ret>'
map -docstring 'Decrease indent' global insert <s-tab> '<a-;>:decrease_indent<ret>'
map -docstring 'Decrease indent or erase character before cursor' global insert <backspace> '<a-;>:decrease_indent_or_erase_character_before_cursor<ret>'

map global normal x ':select_whole_lines_or_extend_lines_down<ret>'

# Text objects
# Quotation marks
map -docstring 'double quotation mark' global object <a-Q> 'c“,”<ret>'
map -docstring 'single quotation mark' global object <a-q> 'c‘,’<ret>'
map -docstring 'double angle quotation mark' global object <a-G> 'c«,»<ret>'
map -docstring 'single angle quotation mark' global object <a-g> 'c‹,›<ret>'
# Tag
map -docstring 'tag' global object t 'c<lt>.+?<gt>,<lt>/.+?<gt><ret>'
##
map -docstring "xml tag objet" global object t %{c<lt>([\w.]+)\b[^>]*?(?<lt>!/)>,<lt>/([\w.]+)\b[^>]*?(?<lt>!/)><ret>}
##
# Line
map -docstring 'line' global object x '<esc>x_'

# Language support -------------------------------------------------------------

hook global InsertChar .* indent_on_inserted_character_with_indentation_rules

# Indentation
set-option global tabstop 4
set-option global indentwidth 2

hook global BufOpenFile .* %{
  hook -once buffer NormalIdle .* %{
    detect-indent-style
  }
}
