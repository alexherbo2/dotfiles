# Kakoune
# https://kakoune.org
# https://github.com/mawww/kakoune
#
# Configuration:
#
# https://github.com/Delapouite/dot-in-the-sky/blob/master/.config/kak/kakrc
# https://github.com/mawww/config/blob/master/kakrc
# https://github.com/occivink/config/blob/master/.config/kak/kakrc
# https://github.com/topisani/dotfiles/blob/master/config/kak/kakrc
# https://gitlab.com/vbauerster/dotfiles/-/blob/master/.config/kak/kakrc

# Preamble ---------------------------------------------------------------------
define-command -override colorscheme -params 1 -docstring 'load color scheme' %{
  source "%val{config}/colors/%arg{1}.kak"
}
evaluate-commands %sh{
  find -L "$kak_config/autoload" -type f -name '*.kak' -exec printf 'source "%s";' {} +
}
# source "%val{config}/kakrc"
# source ~/.kakrc

# Preamble ---------------------------------------------------------------------

remove-hooks global config

try %sh{
  kak-lsp --kakoune --session "$kak_session"
  kak-test --print-kakoune-init
}

# Options ----------------------------------------------------------------------

# UI options
set-option global startup_info_version 20221231
set-option global ui_options terminal_set_title=no terminal_assistant=none
set-option global scrolloff 5,1
add-highlighter -override global/show-matching show-matching
add-highlighter -override global/number-lines number-lines -hlcursor

# Status line
set-option global modelinefmt '%val{bufname} %val{cursor_line}:%val{cursor_char_column} {{context_info}} {{mode_info}} - %val{client}@%val{session}'

# Color scheme: One light (https://git.sr.ht/~raiguard/one.kak)
source "%val{runtime}/colors/default.kak"
# colorscheme one-light

# Custom faces
# set-face global Whitespace "rgb:%opt{bg}+f"
# set-face global SelectedText "rgb:%opt{blue}+f"

# System clipboard
# set-option global clipboard_copy_command 'pbcopy'
# set-option global clipboard_copy_args

set-option global clipboard_paste_command 'pbpaste'
set-option global clipboard_paste_args

# Highlight whitespace
# add-highlighter -override global/whitespace ref whitespace

# Highlight various characters
# https://unicode-table.com
add-highlighter -override global/U+2013 regex '–' '0:green+f'
add-highlighter -override global/U+2014 regex '—' '0:green+bf'
add-highlighter -override global/math-symbols regex '[−×]' '0:cyan+f'

# Mappings ---------------------------------------------------------------------

map -docstring 'yank joined selections into system clipboard' global user y ': yank_terminal_clipboard<ret>'
map global normal <ret> ':'
map global normal f '<a-:>F'
map global normal F '<a-:><a-;><a-F>'
map global normal t '<a-:>T'
map global normal T '<a-:><a-;><a-T>'
# map global normal / '<a-:>?'
# map global normal ? '<a-:><a-;><a-?>'
# map global normal n '<a-:>?<ret>'
# map global normal N '<a-:><a-;><a-?><ret>'
map global normal x ': select-or-extend-lines<ret>'
map global normal X 'x<a-:><a-;>'
map global normal v '<a-i>'
map global normal V '<a-a>'
map global normal { '<a-:><a-;>{p'
map global normal } '<a-:>}p'
define-command select-or-extend-lines %{
  execute-keys '<a-:>'
  try %{
    # At least one selection is not full, so select whole lines.
    execute-keys -draft '<a-K>\A^.*\n\z<ret>'
    execute-keys 'x'
  } catch %{
    execute-keys 'Jx'
  }
}

# Normal mode ------------------------------------------------------------------

# Hot reloading
# map -docstring 'reload kakrc' global user <F5> ': source "%val{runtime}/kakrc"; echo reloaded kakrc<ret>'

# Enter command mode
map -docstring 'enter command' global normal <ret> :

# Re-center view
# map -docstring 'scroll to put the cursor on the top line of the window' global user , vtvm

# Editing
# map -docstring 'save file' global normal <c-s> ': write; echo -markup ''{Information}file saved''<ret>'
# map -docstring 'close client' global normal <c-q> ': quit<ret>'
# map -docstring 'close buffer' global normal <c-w> ': delete-buffer; echo -markup ''{Information}buffer closed''<ret>'

# Navigation
# map -docstring 'scroll one page up' global normal <pageup> ,<pageup>
# map -docstring 'scroll one page down' global normal <pagedown> ,<pagedown>
# map -docstring 'move to previous paragraph' global normal [ ,gh[pgi
# map -docstring 'move to next paragraph' global normal ] ,]plgi

# Selection primitives
map -docstring 'select inner object' global normal v <a-i>
map -docstring 'select whole object' global normal V <a-a>
# map -docstring 'enter surround mode' global normal q ': enter-surround-mode<ret>'
# map -docstring 'enter select mode' global normal s ': enter-select-mode<ret>'

# User mode --------------------------------------------------------------------

# LSP
# map -docstring 'lsp' global user l ': enter-user-mode lsp<ret>'
# map -docstring 'open document symbol picker' global user s ': enter-user-mode lsp<ret>s'
# map -docstring 'open workspace symbol picker' global user S ': enter-user-mode lsp<ret>o'

# Formatting and parsing date-time
map -docstring 'format date to 2006-01-02' global user d '| date -d "$kak_selection" ''+%F''<ret>'
map -docstring 'format date to 2006-01-02 Mon' global user D '| date -d "$kak_selection" ''+%F %a''<ret>'

# Show the Unicode value under the cursor.
map -docstring 'Unicode' global user u ': echo -markup "{Information}U+%sh{printf ''%04x'' ""$kak_cursor_char_value""}"<ret>'

# Goto mode --------------------------------------------------------------------

map -docstring 'file' global goto f '<a-;>: open-file-picker<ret>'

define-command -override open-file-picker -docstring 'open-file-picker: Opens file picker.' %{
  prompt -menu file: -shell-script-candidates 'fd -H --type file' %{
    edit %val{text}
  }
}

map -docstring 'buffer' global goto b '<a-;>: open-buffer-picker<ret>'

define-command -override open-buffer-picker -docstring 'open-buffer-picker: Opens buffer picker.' %{
  prompt -menu buffer: -buffer-completion %{
    buffer %val{text}
  }
}

map -docstring 'global search' global goto / '<a-;>: open-global-search-picker<ret>'

define-command -override open-global-search-picker -docstring 'open-global-search-picker: Opens global search picker.' %{
  # Provides word completion
  prompt grep: -shell-script-candidates %{
    echo "write '$kak_response_fifo'" > "$kak_command_fifo"
    cat "$kak_response_fifo" | kak -f 's[\w-]{4,}<ret>y%<a-R>a<ret>'
  } %{
    grep rg --hidden --column --with-filename %val{text}
  }
}

# Vim-like unimpaired mappings
declare-user-mode unimpaired_left
declare-user-mode unimpaired_right
map -docstring 'unimpaired_left' global user '[' ': enter-user-mode unimpaired_left<ret>'
map -docstring 'unimpaired_right' global user ']' ': enter-user-mode unimpaired_right<ret>'
map -docstring 'read-only' global unimpaired_left r ': set-option buffer readonly yes<ret>'
map -docstring 'read-only' global unimpaired_right r ': set-option buffer readonly no<ret>'
map -docstring 'whitespace' global unimpaired_left w ': remove-highlighter global/whitespace<ret>'
map -docstring 'whitespace' global unimpaired_right w ': add-highlighter global/whitespace show-whitespaces<ret>'
map -docstring 'rulers' global unimpaired_left r ': remove-highlighter global/rulers<ret>'
map -docstring 'rulers' global unimpaired_right r ': add-highlighter global/rulers column 81 default,cyan<ret>'

# Commands ---------------------------------------------------------------------

define-command alacritty-open-new-client -params .. %{
  nop %sh{
    alacritty msg create-window -e kak -c "$kak_session" -e "$*"
  }
}

complete-command alacritty-open-new-client command

define-command foot-open-new-client -params .. %{
  nop %sh{
    footclient -e kak -c "$kak_session" -e "$*"
  }
}

complete-command foot-open-new-client command

define-command -override mkdir -docstring 'make directory for the current buffer' %{
  nop %sh(mkdir -p -- "$(dirname -- "$kak_buffile")")
}

# Terminal integration
hook -group alacritty-detection global ClientCreate '.*' %{
  trigger-user-hook "TERM=%val{client_env_TERM}"
}

# Alacritty terminal detection
hook -group alacritty-integration global User 'TERM=alacritty' %{
  alias global open-new-client alacritty-open-new-client
}

# foot terminal detection
hook -group alacritty-integration global User 'TERM=foot' %{
  alias global open-new-client foot-open-new-client
}

define-command open-kakrc -docstring 'open kakrc' %{
  edit "%val{config}/kakrc"
}

define-command open-config -params 1 -docstring 'open from %val{config}' %{
  edit "%val{config}/%arg{1}"
}

complete-command -menu open-config shell-script-candidates %{
  cd "$kak_config" && find -L . -type f | sort -u
}

define-command -override open-runtime -params 1 -docstring 'open from %val{runtime}' %{
  edit "%val{runtime}/%arg{1}"
}

complete-command -menu open-config shell-script-candidates %{
  cd "$kak_runtime" && find -L . -type f | sort -u
}

define-command yank_terminal_clipboard %{
  nop %sh{
    printf 'echo -to-file %%(%s) -- "%%val{selections}"' "$kak_response_fifo" > "$kak_command_fifo"
    {
      printf '\033]52;c;'
      tr '\0' '\n' < "$kak_response_fifo" | sed 's/\\\\/\\/g' | base64
      printf '\a'
    } > /dev/tty
  }
}

# Show Unicode value in the status line.
define-command get_character_info %{
  echo %sh{printf 'U+%04x' "$kak_cursor_char_value"}
}

# Language support -------------------------------------------------------------

# Indentation
set-option global tabstop 4
set-option global indentwidth 2
set-option global disabled_hooks '.+-trim-indent|.+-insert|.+-indent'

# Kakoune
# https://kakoune.org
hook -group config global BufSetOption filetype=kak %{
  set-option buffer indentwidth 2
  set-option buffer line_comment_token '#'
}

# Crystal
# https://crystal-lang.org
hook -group config global BufSetOption filetype=crystal %{
  set-option buffer indentwidth 2
  set-option buffer line_comment_token '#'
}

# JavaScript
# https://developer.mozilla.org/en-US/docs/Web/JavaScript
hook -group config global BufSetOption filetype=javascript %{
  set-option buffer indentwidth 2
  set-option buffer line_comment_token '//'
  set-option buffer block_comment_tokens '/*' '*/'
}

# Lua
# https://lua.org
hook -group config global BufSetOption filetype=lua %{
  set-option buffer indentwidth 2
  set-option buffer line_comment_token '--'
  set-option buffer block_comment_tokens '[[--' '--]]'
}

# Makefile
# https://en.wikipedia.org/wiki/Make_(software)#Makefile
hook -group config global BufSetOption filetype=makefile %{
  set-option buffer indentwidth 0
  set-option buffer line_comment_token '#'
}

# grep
# https://en.wikipedia.org/wiki/Grep
hook -group config global BufSetOption filetype=grep %{
  map buffer normal <ret> ': grep-jump<ret>'
}

# Detection --------------------------------------------------------------------

hook -group config global BufCreate '.*/\.kakrc' %{
  set-option buffer filetype kak
}

hook -group config global BufCreate '.*/(profile|bashrc|tmux.conf)' %{
  set-option buffer filetype sh
}

# Notes ------------------------------------------------------------------------

evaluate-commands -draft edit -scratch scratch.txt

hook -group config global BufCreate '.*/docs/notes.txt' %{
  set-option buffer filetype notes
}

hook -group config global BufSetOption filetype=notes %{
  add-highlighter -override buffer/notes ref notes
  map -docstring 'insert date (2006-01-02 Mon)' buffer insert <c-u> '<a-;>;<a-;>!date ''+%F %a'' | tr -d ''\n''<ret><right>'
  map -docstring 'insert date (2006-01-02 Mon 15:04)' buffer insert <c-i> '<a-;>;<a-;>!date ''+%F %a %H:%M'' | tr -d ''\n''<ret><right>'
}

add-highlighter -override shared/notes regions
add-highlighter -override shared/notes/text default-region group
add-highlighter -override shared/notes/text/entry-date-year regex '^\d{4}' 0:comment
add-highlighter -override shared/notes/text/entry-date-year-month regex '^\d{4}-\d{2}' 0:comment
add-highlighter -override shared/notes/text/entry-date regex '^\d{4}-\d{2}-\d{2} \w{3}' 0:comment
add-highlighter -override shared/notes/text/entry-date-time regex '^\d{4}-\d{2}-\d{2} \w{3} \d{2}:\d{2}' 0:comment
add-highlighter -override shared/notes/text/keyword regex '\b(Buy|Go on|Go to|Read|Sign up|Update|Watch)\b' 0:keyword
add-highlighter -override shared/notes/text/url regex 'https?://\S+' 0:link
add-highlighter -override shared/notes/info region -recurse '\(' '\(' '\)' group
add-highlighter -override shared/notes/info/content fill string
add-highlighter -override shared/notes/info/url ref notes/text/url
add-highlighter -override shared/notes/info/delimiters regex '(?<opening>.).+(?<closing>.)' opening:string closing:string
add-highlighter -override shared/notes/tag region -recurse '\[' '\[' '\]' fill meta

# List -------------------------------------------------------------------------

hook -group config global BufCreate '.*/list.txt' %{
  set-option buffer filetype list
}

hook -group config global BufSetOption filetype=list %{
  add-highlighter -override buffer/list ref list
}

add-highlighter -override shared/list regions
add-highlighter -override shared/list/text default-region group
add-highlighter -override shared/list/text/number regex '\b\d{2}\b' 0:value
add-highlighter -override shared/list/text/date regex '\b\d{4}-\d{2}-\d{2}\b' 0:string
add-highlighter -override shared/list/text/year regex '\b\d{4}\b' 0:string
add-highlighter -override shared/list/text/keyword regex '\b(Movie|Special)\b' 0:keyword
add-highlighter -override shared/list/text/url regex 'https?://\S+' 0:link
