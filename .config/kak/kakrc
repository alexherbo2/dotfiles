# Kakoune
# https://kakoune.org
# https://github.com/mawww/kakoune
#
# Configuration:
#
# https://github.com/Delapouite/dot-in-the-sky/blob/master/.config/kak/kakrc
# https://github.com/mawww/config/blob/master/kakrc
# https://github.com/occivink/config/blob/master/.config/kak/kakrc
# https://github.com/topisani/dotfiles/blob/master/config/kak/kakrc
# https://gitlab.com/vbauerster/dotfiles/-/blob/master/.config/kak/kakrc

# VS Code keyboard shortcuts
# https://code.visualstudio.com/docs/getstarted/keybindings#_default-keyboard-shortcuts

# Preamble ---------------------------------------------------------------------
define-command colorscheme -params 1 -docstring 'load color scheme' %{
  source "%val{config}/colors/%arg{1}.kak"
}
evaluate-commands %sh{
  find -L "$kak_config/autoload" -type f -name '*.kak' -exec printf 'source "%s";' {} +
}
colorscheme macos_light

# Preamble ---------------------------------------------------------------------

evaluate-commands %sh{
  kak-lsp --kakoune --session "$kak_session"
}
lsp-enable

# Options ----------------------------------------------------------------------

# UI options
set-option global startup_info_version 20221231
set-option global ui_options terminal_set_title=no terminal_assistant=none
set-option global matching_pairs ( ) { } [ ] < > “ ” ‘ ’ « » ‹ ›
set-option global scrolloff 5,1
add-highlighter global/show-matching show-matching
add-highlighter global/number-lines number-lines -hlcursor
add-highlighter global/soft_wrap wrap -word -indent -marker '↪'

# Status line
set-option global modelinefmt '%val{bufname} %val{cursor_line}:%val{cursor_char_column} {{context_info}} {{mode_info}} - %val{client}@%val{session}'

# Highlight various characters
# https://unicode-table.com
add-highlighter global/U+2013 regex '–' '0:green+f'
add-highlighter global/U+2014 regex '—' '0:green+bf'
add-highlighter global/math-symbols regex '[−×]' '0:cyan+f'

# Commands ---------------------------------------------------------------------

define-command -hidden convert_selected_text_to_ascii %{
  execute-keys '|iconv -f UTF-8 -t ASCII//TRANSLIT//IGNORE<ret>'
}

define-command -hidden convert_selected_dates_to_iso_8601 %{
  execute-keys '|date -I -d "$kak_selection"<ret>'
}

define-command -hidden enter_lsp_mode %{
  enter-user-mode lsp
}

define-command select_or_extend_lines %{
  execute-keys '<a-:>'
  try %{
    # At least one selection is not full, so select whole lines.
    execute-keys -draft '<a-K>\A^.*\n\z<ret>'
    execute-keys 'x'
  } catch %{
    execute-keys 'Jx'
  }
}

define-command -hidden select_next_surrounding_object -params 1 %{
  execute-keys "f%arg{1}<a-a>%arg{1}"
}

define-command -hidden select_previous_surrounding_object -params 1 %{
  execute-keys "<a-f>%arg{1}h<a-a>%arg{1}"
}

define-command -hidden swap_buffer_in_viewport -params 1 %{
  execute-keys '"sZ'
  execute-keys -client %arg{1} '"tZ'
  execute-keys '"tz<esc>'
  execute-keys -client %arg{1} '"sz<esc>'
}

define-command sort_selections %{
  evaluate-commands -save-regs '"' %sh{
    printf 'echo -to-file %s -- "%%val{selections}"' "$kak_quoted_response_fifo" > "$kak_command_fifo"
    jq -s -R -r 'split("\u0000") | sort | ["set-register", "dquote"] + map("\u0027" + gsub("\u0027"; "\u0027" + "\u0027") + "\u0027") | join(" ")' "$kak_response_fifo"
    echo execute-keys R
  }
}

# Reference: https://code.visualstudio.com/docs/getstarted/keybindings#_basic-editing
define-command move_lines_down -docstring 'move line down' %{
  execute-keys -draft 'x<a-_><a-:>Z;ezjxdzP'
}

define-command move_lines_up -docstring 'move line up' %{
  execute-keys -draft 'x<a-_><a-:><a-;>Z;bzkxdzp'
}

define-command select_highlights -docstring 'select all occurrences of current selection' %{
  execute-keys '"aZ*%s<ret>"bZ"az"b<a-z>a'
}

define-command increment_selected_numbers -params 0..1 %{
  execute-keys "a+%sh{expr $1 '|' 1}<esc>|{ cat; echo; } | bc<ret>"
}

define-command decrement_selected_numbers -params 0..1 %{
  execute-keys "a-%sh{expr $1 '|' 1}<esc>|{ cat; echo; } | bc<ret>"
}

define-command -hidden evaluate_selected_text %{
  evaluate-commands -itersel %{
    evaluate-commands %val{selection}
  }
}

define-command open_current_buffer_with_visual_studio_code %{
  nop %sh{
    code --goto "$kak_buffile:$kak_line:$kak_column"
  }
}

define-command alacritty_open_new_client -params .. %{
  nop %sh{
    alacritty msg create-window -e kak -c "$kak_session" -e "$*"
  }
}

define-command foot_open_new_client -params .. %{
  nop %sh{
    footclient -e kak -c "$kak_session" -e "$*"
  }
}

define-command mkdir %{
  nop %sh(mkdir -p -- "$(dirname -- "$kak_buffile")")
}

define-command open_config %{
  edit "%val{config}/kakrc"
}

define-command get_character_info %{
  echo -markup %sh{printf '{Information}U+%04x' "$kak_cursor_char_value"}
}

define-command pwd %{
  echo -markup "{Information}%sh{pwd}"
}

# Prompt commands --------------------------------------------------------------

define-command -hidden show_definition_preview_hover %{
  lsp-hover
}

define-command -hidden open_buffer_picker %{
  prompt open: -menu -buffer-completion %{
    buffer %val{text}
  }
}

define-command -hidden open_document_symbol_picker %{
  lsp-goto-document-symbol
}

define-command -hidden open_file_picker %{
  prompt open: -menu -shell-script-candidates 'fd --hidden --type=file' %{
    edit -existing %val{text}
  }
}

define-command -hidden open_global_search_prompt %{
  prompt global_search: -shell-script-candidates %{
    echo "write $kak_quoted_response_fifo" > "$kak_command_fifo"
    tr -sc '[:alnum:]' '\n' < "$kak_response_fifo"
  } %{
    open_buffer_with_output "%val{text}.refs" rg --hidden --column -- %val{text}
  }
}

define-command -hidden open_viewport_picker %{
  prompt -menu viewport_picker: -client-completion %{
    swap_buffer_in_viewport %val{text}
  }
}

define-command -hidden open_workspace_symbol_picker %{
  lsp-workspace-symbol-incr
}

define-command -hidden prompt_select_next_surrounding_object %{
  on-key %{
    select_next_surrounding_object %val{key}
  }
}

define-command -hidden prompt_select_previous_surrounding_object %{
  on-key %{
    select_previous_surrounding_object %val{key}
  }
}

# Aliases
alias global = evaluate_selected_text

# Command completion
complete-command alacritty_open_new_client command
complete-command foot_open_new_client command

# Mappings ---------------------------------------------------------------------

# Normal mode ------------------------------------------------------------------

# Enter command mode
map -docstring 'enter command mode' global normal <ret> :

# User mode --------------------------------------------------------------------

map -docstring 'convert selected dates to ISO 8601' global user d ':convert_selected_dates_to_iso_8601<ret>'
map -docstring 'convert selected text to ASCII' global user @ ':convert_selected_text_to_ascii<ret>'
map -docstring 'get character info' global user u ':get_character_info<ret>'

# Add search flags
map global prompt <a-i> '<home>(?i)<end>'
map global prompt <a-o> '<home>(?S)<end>'

map -docstring 'enter select mode' global normal S ':enter_select_mode<ret>'
map -docstring 'enter surround mode' global normal q ':enter_surround_mode<ret>'
map -docstring 'select previous surrounding object' global normal [ ':prompt_select_previous_surrounding_object<ret>'
map -docstring 'select next surrounding object' global normal ] ':prompt_select_next_surrounding_object<ret>'
map -docstring 'open file picker' global user f ':open_file_picker<ret>'
map -docstring 'open buffer picker' global user b ':open_buffer_picker<ret>'
map -docstring 'open global search prompt' global user / ':open_global_search_prompt<ret>'
map -docstring 'open viewport picker' global user v ':open_viewport_picker<ret>'
map -docstring 'open document symbol picker' global user s ':open_document_symbol_picker<ret>'
map -docstring 'open workspace symbol picker' global user S ':open_workspace_symbol_picker<ret>'
map -docstring 'show definition preview hover' global user k ':show_definition_preview_hover<ret>'
map -docstring 'enter lsp mode' global user l ':enter_lsp_mode<ret>'
map -docstring 'yank selected text to the terminal clipboard' global user y ':yank_selected_text_to_terminal_clipboard<ret>'

# remappings
map global normal <a-q> q
map global normal <a-Q> Q

# Vim-like unimpaired mappings
declare-user-mode unimpaired_left
declare-user-mode unimpaired_right
map -docstring 'unimpaired_left' global user '[' ': enter-user-mode unimpaired_left<ret>'
map -docstring 'unimpaired_right' global user ']' ': enter-user-mode unimpaired_right<ret>'
map -docstring 'read-only' global unimpaired_left r ': set-option buffer readonly yes<ret>'
map -docstring 'read-only' global unimpaired_right r ': set-option buffer readonly no<ret>'
map -docstring 'render whitespace' global unimpaired_left w ': remove-highlighter global/whitespace<ret>'
map -docstring 'render whitespace' global unimpaired_right w ': add-highlighter global/whitespace show-whitespaces<ret>'
map -docstring 'rulers' global unimpaired_left r ': remove-highlighter global/rulers<ret>'
map -docstring 'rulers' global unimpaired_right r ': add-highlighter global/rulers column 81 default,cyan<ret>'

map -docstring 'move line down' global normal <c-j> ':move_lines_down<ret>'
map -docstring 'move line up' global normal <c-k> ':move_lines_up<ret>'
map -docstring 'select all occurrences of current selection' global normal <a-percent> ':select_highlights<ret>'
map -docstring 'increment selected numbers' global normal <c-a> ':increment_selected_numbers %val{count}<ret>'
map -docstring 'decrement selected numbers' global normal <c-x> ':decrement_selected_numbers %val{count}<ret>'
map -docstring 'buffer directory' global prompt <a-/> '%sh{dirname "$kak_bufname"}<a-!>/'

map -docstring 'clear register' global normal D ':clear_register %val{register}<ret>'
map -docstring 'add selections' global normal Y ':add_selections %val{register}<ret>'
map -docstring 'iterate next selection' global normal <c-n> ':iterate_next_selection %val{register}<ret>'
map -docstring 'iterate previous selection' global normal <c-p> ':iterate_previous_selection %val{register}<ret>'
map -docstring 'toggle comments' global normal '#' ':toggle_comments<ret>'
map -docstring 'erase characters before cursor to line begin' global insert <c-u> '<a-;>: erase_characters_before_cursor_to_line_begin<ret>'
map -docstring 'paste' global insert <c-y> '<c-r>"'
map -docstring 'Increase indent' global insert <tab> '<a-;><a-gt>'
map -docstring 'Decrease indent' global insert <s-tab> '<a-;><lt>'
map -docstring 'Decrease indent or erase character before cursor' global insert <backspace> '<a-;>: decrease-indent-or-erase-character-before-cursor<ret>'

# Insert various characters.
# Heavily based on qwerty-lafayette.
# https://qwerty-lafayette.org
# See also “Vim digraphs” for defaults.
# https://vimhelp.org/digraph.txt.html#digraphs-default
declare-user-mode digraphs
define-command -hidden insert_text -params 1 %{
  evaluate-commands -save-regs '"' %{
    set-register '"' %arg{1}
    execute-keys -draft ';P'
  }
}
map -docstring 'erase characters before cursor to line begin' global insert <c-u> ''
map -docstring 'enter digraphs mode' global insert <c-k> '<a-;>:enter-user-mode digraphs<ret>'
map -docstring 'â' global digraphs 'q' ':insert_text â<ret>'
map -docstring 'é' global digraphs 'w' ':insert_text é<ret>'
map -docstring 'É' global digraphs 'W' ':insert_text É<ret>'
map -docstring 'è' global digraphs 'e' ':insert_text è<ret>'
map -docstring 'ë' global digraphs 'E' ':insert_text ë<ret>'
map -docstring 'ê' global digraphs 'r' ':insert_text ê<ret>'
map -docstring 'ù' global digraphs 'u' ':insert_text ù<ret>'
map -docstring 'û' global digraphs 'U' ':insert_text û<ret>'
map -docstring 'î' global digraphs 'i' ':insert_text î<ret>'
map -docstring 'ï' global digraphs 'I' ':insert_text ï<ret>'
map -docstring 'ô' global digraphs 'o' ':insert_text ô<ret>'
map -docstring 'ê' global digraphs '[' ':insert_text ê<ret>'
map -docstring 'ë' global digraphs ']' ':insert_text ë<ret>'
map -docstring '«' global digraphs '{' ':insert_text «<ret>'
map -docstring '»' global digraphs '}' ':insert_text »<ret>'
map -docstring 'à' global digraphs 'a' ':insert_text à<ret>'
map -docstring 'À' global digraphs 'A' ':insert_text À<ret>'
map -docstring 'â' global digraphs 's' ':insert_text â<ret>'
map -docstring 'ç' global digraphs 'c' ':insert_text ç<ret>'
map -docstring 'Ç' global digraphs 'C' ':insert_text Ç<ret>'
map -docstring 'æ' global digraphs 'z' ':insert_text æ<ret>'
map -docstring 'œ' global digraphs 'x' ':insert_text œ<ret>'
map -docstring '…' global digraphs '.' ':insert_text …<ret>'
map -docstring '’' global digraphs '<space>' ':insert_text ’<ret>'
map -docstring '“' global digraphs '<lt>' ':insert_text “<ret>'
map -docstring '”' global digraphs '<gt>' ':insert_text ”<ret>'
map -docstring '—' global digraphs '<minus>' ':insert_text —<ret>'
map -docstring '–' global digraphs '_' ':insert_text –<ret>'

# Text objects
# Quotation marks
map -docstring 'double quotation mark' global object <a-Q> 'c“,”<ret>'
map -docstring 'single quotation mark' global object <a-q> 'c‘,’<ret>'
map -docstring 'double angle quotation mark' global object <a-G> 'c«,»<ret>'
map -docstring 'single angle quotation mark' global object <a-g> 'c‹,›<ret>'
# Tag
map -docstring 'tag' global object t 'c<lt>.+?<gt>,<lt>/.+?<gt><ret>'
# Line
map -docstring 'line' global object x '<esc>x_'

# Extended next and previous pairs
map global normal <ret> ':'
map global normal f '<a-:>F'
map global normal F '<a-:><a-;><a-F>'
map global normal t '<a-:>T'
map global normal T '<a-:><a-;><a-T>'
# map global normal / '<a-:>?'
# map global normal ? '<a-:><a-;><a-?>'
# map global normal n '<a-:>?<ret>'
# map global normal N '<a-:><a-;><a-?><ret>'
map global normal x ':select_or_extend_lines<ret>'
map global normal X 'x<a-:><a-;>'
map global normal { '<a-:><a-;>{p'
map global normal } '<a-:>}p'

# Windowing --------------------------------------------------------------------

# Terminal detection
hook -group terminal-detection global ClientCreate '.*' %{
  trigger-user-hook "TERM=%val{client_env_TERM}"
}

hook global User 'TERM=alacritty' %{
  alias global open_new_client alacritty_open_new_client
}

hook global User 'TERM=foot' %{
  alias global open_new_client foot_open_new_client
}

# Language support -------------------------------------------------------------

# Indentation
set-option global tabstop 4
set-option global indentwidth 2
set-option global disabled_hooks '.+-trim-indent|.+-insert|.+-indent'

# Kakoune
# https://kakoune.org
hook global BufSetOption filetype=kak %{
  set-option buffer indentwidth 2
  set-option buffer line_comment_token '#'
}

# Crystal
# https://crystal-lang.org
hook global BufSetOption filetype=crystal %{
  set-option buffer indentwidth 2
  set-option buffer line_comment_token '#'
}

# JavaScript
# https://developer.mozilla.org/en-US/docs/Web/JavaScript
hook global BufSetOption filetype=javascript %{
  set-option buffer indentwidth 2
  set-option buffer line_comment_token '//'
  set-option buffer block_comment_tokens '/*' '*/'
}

# Lua
# https://lua.org
hook global BufSetOption filetype=lua %{
  set-option buffer indentwidth 2
  set-option buffer line_comment_token '--'
  set-option buffer block_comment_tokens '[[--' '--]]'
}

# Makefile
# https://en.wikipedia.org/wiki/Make_(software)#Makefile
hook global BufSetOption filetype=makefile %{
  set-option buffer indentwidth 0
  set-option buffer line_comment_token '#'
}
