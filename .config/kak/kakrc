# Kakoune
# https://kakoune.org
# https://github.com/mawww/kakoune

colorscheme macos_light

# Preamble ---------------------------------------------------------------------

evaluate-commands %sh{
  kak-lsp --kakoune --session "$kak_session"
}
alias global lsp lsp-enable

# Options ----------------------------------------------------------------------

# UI options
set-option global startup_info_version 20231231
set-option global ui_options terminal_set_title=no terminal_assistant=none
set-option global matching_pairs ( ) { } [ ] < > “ ” ‘ ’ « » ‹ ›
set-option global scrolloff 5,1
add-highlighter global/match_brackets show-matching
add-highlighter global/line_numbers number-lines -hlcursor
add-highlighter global/search ref search
add-highlighter global/selected_text ref selected_text

set-option global terminal_command alacritty
set-option global terminal_args msg create-window -e
set-option global grep_command rg
set-option global grep_args --vimgrep --hidden
set-option global find_command fd
set-option global find_args --hidden --type=file

# Status line
set-option global modelinefmt '%opt{lsp_modeline_code_actions}%opt{lsp_modeline_progress}%opt{lsp_modeline_message_requests} %val{bufname} %val{cursor_line}:%val{cursor_char_column} {{context_info}} {{mode_info}} %val{client}@%val{session}'

# Highlight various characters
add-highlighter global/characters regex '[–—−×]' '0:cyan+f'

# Key bindings -----------------------------------------------------------------
# Normal mode ------------------------------------------------------------------

# Key remapping
map global normal N <a-n>
map global normal X x
map global normal <ret> :

map -docstring 'jump to mark' global unimpaired_left m ':jump_to_mark_on_next_key<ret>'
map -docstring 'set mark' global unimpaired_right m ':set_mark_on_next_key<ret>'

map global normal <c-e> ':nnn<ret>'
map global normal <c-l> ':gitui<ret>'
map global normal <c-j> ':copy_selected_lines_down<ret>'
map global normal <c-k> ':copy_selected_lines_up<ret>'
map global normal ` ':enter_letter_case_mode<ret>'
map global normal <c-w> ':enter_tmux_mode<ret>'
map global normal <c-r> ':enter_tmux_repl_mode<ret>'
map global normal v ':enter_extend_mode<ret>'
map global normal m ':enter_match_mode<ret>'
map global normal "'" ':enter_mark_mode<ret>'
map global normal S ':enter_select_mode<ret>'
map global normal '[' ':enter_unimpaired_left_mode<ret>'
map global normal ']' ':enter_unimpaired_right_mode<ret>'
map global normal Y '<a-Z>a'
map global normal <c-down> ':move_selected_lines_down<ret>'
map global normal <c-up> ':move_selected_lines_up<ret>'
map global normal <a-%> ':select_highlights<ret>'
map global normal <c-a> ':increment_selected_numbers %val{count}<ret>'
map global normal <c-x> ':decrement_selected_numbers %val{count}<ret>'
map global normal <c-n> ':iterate_next_selection<ret>'
map global normal <c-p> ':iterate_previous_selection<ret>'
map global normal '#' ':toggle_comments_with_config<ret>'
map global normal x ':select_whole_lines_or_extend_lines_down<ret>'

# Match mode -------------------------------------------------------------------

map -docstring 'enter surround mode' global match s ':enter_surround_mode<ret>'
map -docstring 'select previous surrounding object' global match p ':enter_select_previous_object_mode<ret>'
map -docstring 'select next surrounding object' global match n ':enter_select_next_object_mode<ret>'

# User mode --------------------------------------------------------------------

map -docstring 'convert selected dates to ISO 8601' global user d ':convert_selected_dates_to_iso_8601<ret>'
map -docstring 'convert selected text to ASCII' global user @ ':convert_selected_text_to_ascii<ret>'
map -docstring 'get character info' global user u ':get_character_info<ret>'
map -docstring 'enter window mode' global user w ':enter_tmux_mode<ret>'
map -docstring 'enter repl mode' global user r ':enter_tmux_repl_mode<ret>'
map -docstring 'open file picker' global user f ':open_file_picker<ret>'
map -docstring 'open buffer picker' global user b ':open_buffer_picker<ret>'
map -docstring 'open global search prompt' global user / ':open_global_search_prompt<ret>'
map -docstring 'open buffer search prompt' global user ? ':open_buffer_search_prompt<ret>'
map -docstring 'open file finder' global user . ':open_file_finder<ret>'
map -docstring 'open buffer finder' global user , ':open_buffer_finder<ret>'
map -docstring 'open document symbol picker' global user s ':open_document_symbol_picker<ret>'
map -docstring 'open workspace symbol picker' global user S ':open_workspace_symbol_picker<ret>'
map -docstring 'show definition preview hover' global user k ':show_definition_preview_hover<ret>'
map -docstring 'enter lsp mode' global user l ':enter_lsp_mode<ret>'
map -docstring 'yank selected text to the terminal clipboard' global user y ':yank_selected_text_to_terminal_clipboard<ret>'

# Prompt mode ------------------------------------------------------------------

map -docstring 'buffer directory' global prompt <a-/> '%sh{dirname "$kak_bufname"}<a-!>/'
map global prompt <c-y> '<c-r>"'

# Add search flags
map global prompt <c-i> '<home>(?i)<end>'
map global prompt <c-s> '<home>(?S)<end>'
map global prompt <c-k> '<home>\Q<end>'

# Insert mode ------------------------------------------------------------------

map global insert <c-k> '<a-;>:enter_digraphs_mode<ret>'
map global insert <a-n> '<esc>:iterate_next_selection<ret>i'
map global insert <a-p> '<esc>:iterate_previous_selection<ret>i'
map global insert <c-u> '<a-;>:erase_characters_before_cursor_to_line_begin<ret>'
map global insert <c-y> '<c-r>"'
map global insert <tab> '<a-;>:increase_indent<ret>'
map global insert <s-tab> '<a-;>:decrease_indent<ret>'
map global insert <backspace> '<a-;>:decrease_indent_or_erase_character_before_cursor<ret>'

hook global InsertCompletionShow .* %{
  map window insert <tab> <c-n>
  map window insert <s-tab> <c-p>
  hook -once window InsertCompletionHide .* %{
    unmap window insert <tab>
    unmap window insert <s-tab>
  }
}

# Language support -------------------------------------------------------------

hook global InsertChar .* indent_on_inserted_character_with_indentation_rules

# Indentation
set-option global tabstop 4
set-option global indentwidth 2

hook global BufOpenFile .* %{
  hook -once buffer NormalIdle .* %{
    detect-indent-style
  }
}
