# Kakoune
# https://kakoune.org
# https://github.com/mawww/kakoune

colorscheme macos_light_low_contrast

# Preamble ---------------------------------------------------------------------

evaluate-commands %sh{
  kak-lsp --kakoune --session "$kak_session"
}
alias global lsp lsp-enable

# Options ----------------------------------------------------------------------

# UI options
set-option global startup_info_version 20231231
set-option global ui_options terminal_set_title=no terminal_assistant=none
set-option global matching_pairs ( ) { } [ ] < > “ ” ‘ ’ « » ‹ ›
# set-option global scrolloff 5,1
add-highlighter global/match_brackets show-matching
hook global WinCreate '.*' %{
  add-highlighter window/line_numbers number-lines -hlcursor
}
add-highlighter global/search ref search
add-highlighter global/selected_text ref selected_text
add-highlighter global/hex_color_code ref hex_color_code

set-option global terminal_command alacritty
set-option global terminal_args msg create-window -e
set-option global grep_command rg
set-option global grep_args --vimgrep --hidden
set-option global find_command fd
set-option global find_args --hidden --type=file

# Status line
set-option global modelinefmt '%opt{lsp_modeline_code_actions}%opt{lsp_modeline_progress}%opt{lsp_modeline_message_requests} %val{bufname} %val{cursor_line}:%val{cursor_char_column} {{context_info}} {{mode_info}} %val{client}@%val{session}'

# Highlight various characters
add-highlighter global/characters regex '[–—−×]' '0:cyan+f'

# Key bindings -----------------------------------------------------------------
# Normal mode ------------------------------------------------------------------

# Key remapping
# The following key bindings expand to:
map -docstring 'select previous match' global normal N <a-n>
map -docstring 'select whole lines' global normal X x
map -docstring 'enter command mode' global normal <ret> :
map -docstring 'keep primary selection' global normal <esc> ',<esc>'
map -docstring 'remove primary selection' global normal <del> '<a-,>'
map -docstring 'collapse selections' global normal <backspace> ';'
# map -docstring 'select inner words' global normal w '<a-i>w'
# map -docstring 'select inner long words' global normal W '<a-i><a-W>'

map -docstring 'recenter viewport' global normal V 'vt5vkvm'
map global normal <c-e> ':open_current_buffer_with_nnn<ret>'
map global normal <c-l> ':open_current_buffer_with_gitui<ret>'
map global normal <c-space> ':sh<ret>'
map global normal <c-j> ':copy_selected_lines_down<ret>'
map global normal <c-k> ':copy_selected_lines_up<ret>'
map global normal ` ':enter_letter_case_mode<ret>'
map -docstring 'enter window mode' global normal <c-w> ':enter_tmux_mode<ret>'
map global normal v ':enter_extend_mode<ret>'
map -docstring 'enter match mode' global normal m ':enter_match_mode<ret>'
map -docstring 'enter select mode' global normal S ':enter_select_mode<ret>'
map -docstring 'enter unimpaired left mode' global normal '[' ':enter_unimpaired_left_mode<ret>'
map -docstring 'enter unimpaired right mode' global normal ']' ':enter_unimpaired_right_mode<ret>'
map -docstring 'enter sticky unimpaired left mode' global normal '{' ':enter_sticky_unimpaired_left_mode<ret>'
map -docstring 'enter sticky unimpaired right mode' global normal '}' ':enter_sticky_unimpaired_right_mode<ret>'
map -docstring 'save selections in append mode' global normal Y '<a-Z>a'
map global normal <c-down> ':move_selected_lines_down<ret>'
map global normal <c-up> ':move_selected_lines_up<ret>'
map global normal <a-%> ':select_highlights<ret>'
map global normal <c-a> ':increment_selected_numbers %val{count}<ret>'
map global normal <c-x> ':decrement_selected_numbers %val{count}<ret>'
map global normal <c-n> ':iterate_next_selection<ret>'
map global normal <c-p> ':iterate_previous_selection<ret>'
map global normal '#' ':toggle_comments_with_config<ret>'
map global normal x ':select_whole_lines_or_extend_lines_down<ret>'

map -docstring 'enter jump mode (select mode: replace)' global normal f ':enter_jump_mode_with_replace_select_mode<ret>'
map -docstring 'enter jump mode (select mode: extend)' global normal F ':enter_jump_mode_with_extend_select_mode<ret>'
map -docstring 'enter jump mode (select mode: append)' global normal <a-f> ':enter_jump_mode_with_append_select_mode<ret>'

# User mode --------------------------------------------------------------------

map -docstring 'enter command mode' global user <space> :
map -docstring 'convert selected dates to ISO 8601' global user d ':convert_selected_dates_to_iso_8601<ret>'
map -docstring 'convert selected text to ASCII' global user @ ':convert_selected_text_to_ascii<ret>'
map -docstring 'get character info' global user u ':get_character_info<ret>'
map -docstring 'enter window mode' global user w ':enter_tmux_mode<ret>'
map -docstring 'open file picker' global user f ':open_file_picker<ret>'
map -docstring 'open buffer picker' global user b ':open_buffer_picker<ret>'
map -docstring 'open global search prompt' global user / ':open_global_search_prompt<ret>'
map -docstring 'open buffer search prompt' global user ? ':open_buffer_search_prompt<ret>'
map -docstring 'open file finder' global user . ':open_file_finder_prompt<ret>'
map -docstring 'open buffer finder' global user , ':open_buffer_finder_prompt<ret>'
map -docstring 'open document symbol picker' global user s ':open_document_symbol_picker<ret>'
map -docstring 'open workspace symbol picker' global user S ':open_workspace_symbol_picker<ret>'
map -docstring 'show definition preview hover' global user k ':show_definition_preview_hover<ret>'
map -docstring 'enter lsp mode' global user l ':enter_lsp_mode<ret>'
map -docstring 'yank selected text to the terminal clipboard' global user y ':yank_selected_text_to_terminal_clipboard<ret>'
map -docstring 'open goto line prompt' global user g ':open_goto_line_prompt<ret>'
map -docstring 'open text highlighter prompt' global user '*' ':open_text_highlighter_prompt<ret>'

# Prompt mode ------------------------------------------------------------------

map -docstring 'insert buffer directory name' global prompt <a-/> '%sh{dirname "$kak_bufname"}<a-!>/'
map -docstring 'insert yanked text' global prompt <a-y> '<c-r>"'
map -docstring 'insert yanked text' global prompt <a-"> '<c-r>"'
map -docstring 'insert selected text' global prompt <a-.> '<c-r>.'
map -docstring 'insert buffer name' global prompt <a-%> '<c-r>%'

hook global User 'SearchBegin=.*' %{
  # Add search flags
  map -docstring 'enable case-insensitive matching' window prompt <a-i> '<home>(?i)<end>'
  map -docstring 'disable multiline matching' window prompt <a-m> '<home>(?S)<end>'
  map -docstring 'disable regex matching' window prompt <a-f> '<home>\Q<end>'
  # Jump through occurrences
  map -docstring 'select next search match' window prompt <a-n> '<a-;>n<a-;>Z'
  map -docstring 'select previous search match' window prompt <a-p> '<a-;><a-n><a-;>Z'
  hook -once window User 'SearchEnd=.*' %{
    unmap window prompt <a-i>
    unmap window prompt <a-m>
    unmap window prompt <a-f>
    unmap window prompt <a-n>
    unmap window prompt <a-p>
  }
}

# Insert mode ------------------------------------------------------------------

map global insert <c-k> '<a-;>:enter_digraphs_mode<ret>'
map global insert <a-n> '<esc>:iterate_next_selection<ret>i'
map global insert <a-p> '<esc>:iterate_previous_selection<ret>i'
map global insert <tab> '<a-;>:increase_indent<ret>'
map global insert <s-tab> '<a-;>:decrease_indent<ret>'
map global insert <backspace> '<a-;>:decrease_indent_or_erase_character_before_cursor<ret>'

hook global InsertCompletionShow '.*' %{
  map window insert <tab> <c-n>
  map window insert <s-tab> <c-p>
  hook -once window InsertCompletionHide '.*' %{
    unmap window insert <tab>
    unmap window insert <s-tab>
  }
}

# User hooks -------------------------------------------------------------------

hook global User 'InsertChars=.*kj' %{
  execute-keys -draft 'hHd'
  execute-keys <esc>
}

hook global User 'OpenDirectory=(.+)' %{
  nnn %val{hook_param_capture_1}
}

add_insert_chars_user_hook global
add_search_user_hooks global
add_open_directory_user_hook global

# Language support -------------------------------------------------------------

hook global InsertChar '.*' indent_on_inserted_character_with_indentation_rules

# Indentation
set-option global tabstop 4
set-option global indentwidth 2

hook global BufOpenFile '.*' %{
  hook -once buffer NormalIdle '.*' %{
    detect-indent-style
  }
}
