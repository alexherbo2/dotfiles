#!/bin/sh

# Crystal
# Homepage: https://crystal-lang.org
# Releases: https://github.com/crystal-lang/crystal/releases
# Latest: https://github.com/crystal-lang/crystal/releases/latest

# Usage:
#
# $ crystal-install
#
# Add ~/.local/share/crystal/releases/latest/bin to your path.

# Environment variables ────────────────────────────────────────────────────────

XDG_DATA_HOME=${XDG_DATA_HOME:-~/.local/share}
XDG_CACHE_HOME=${XDG_CACHE_HOME:-~/.cache}

DATA=$XDG_DATA_HOME/crystal

STAGE=$(mktemp -d)
trap 'rm -Rf "$STAGE"' EXIT

# Main program ─────────────────────────────────────────────────────────────────

main() {
  # Platform
  os=$(get_os)
  arch=$(get_arch)

  # Version
  version=$(get_version)

  # Releases
  releases_path=$DATA/releases
  release_path=$releases_path/$version
  latest_release_path=$releases_path/latest

  # Download link
  download_link=$(get_download_link)
  archive_name=$(basename "$download_link")
  # crystal-{version}-1-{os}-{arch}.tar.gz ⇒ crystal-{version}-1
  file_name=$(basename "$archive_name" "-${os}-${arch}.tar.gz")

  # Print information
  echo releases_path: "$releases_path"
  echo release_path: "$release_path"
  echo latest_release_path: "$latest_release_path"
  echo download_link: "$download_link"
  echo custom_path: "$latest_release_path/bin"

  # Create releases
  mkdir -p "$releases_path"

  # Download the release
  if ! test -e "$release_path"; then
    # Navigate into the stage directory and extract the release.
    cd "$STAGE"
    curl -sSL --remote-name "$download_link"
    tar xf "$archive_name"
    mv "$file_name" "$release_path"
  fi

  # Symlink the latest release
  cd "$releases_path"
  rm -f latest
  ln -s "$version" latest
}

# Utility functions ────────────────────────────────────────────────────────────

get_download_link() {
  # Platform
  os=$(get_os)
  arch=$(get_arch)
  version=$(get_version)

  echo "https://github.com/crystal-lang/crystal/releases/download/${version}/crystal-${version}-1-${os}-${arch}.tar.gz"
}

# curl wrappers
get_url_effective() {
  # [--head] ⇒ Do not download the body
  # [-o /dev/null] ⇒ Suppress headers output
  # [--write-out '%{url_effective}'] ⇒ Display the URL that was fetched
  curl -sSL --head -o /dev/null --write-out '%{url_effective}' "$1"
}

# Get platform info
get_os() {
  uname -s | downcase
}

get_arch() {
  uname -m
}

get_version() {
  url=$(get_url_effective https://github.com/crystal-lang/crystal/releases/latest)
  version=$(basename "$url")

  echo "$version"
}

downcase() {
  tr '[:upper:]' '[:lower:]'
}

main
